---
import navItems from "../../data/nav.json";
import logoSVG from "/public/svg/logo-full.svg?raw";

interface Props {
  activeSlug: string;
}

const { activeSlug } = Astro.props;
---

<Fragment>
  <nav id="desktop-nav">
    <a href="/" class="nav-logo" aria-label="defguard" data-astro-prefetch>
      <Fragment set:html={logoSVG} />
    </a>
    <ul class="nav-items">
      {
        navItems.map((item) => (
          <li class:list={["nav-item", { "has-dropdown": item.children }]}>
            {item.url ? (
              <a
                href={item.url}
                target={item.external ? "_blank" : "_self"}
                data-astro-prefetch={item.prefetch ? "hover" : "false"}
                class:list={[
                  {
                    active: activeSlug === item.url,
                    external: item.external,
                  },
                ]}
              >
                <span>{item.display}</span>
                {item.external && (
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="9"
                    height="9"
                    viewBox="0 0 12 13"
                    fill="none"
                  >
                    <path
                      fill-rule="evenodd"
                      clip-rule="evenodd"
                      d="M0 0.5H4V1.83333H1.33333V11.1667H10.6667V8.5H12V12.5H0V0.5ZM9.72386 1.83333H7.77778V0.5H12V4.72222H10.6667V2.77614L6.4714 6.9714L5.5286 6.0286L9.72386 1.83333Z"
                      style={{ fill: "var(--text-body-primary)" }}
                    />
                  </svg>
                )}
              </a>
            ) : (
              <span class="nav-label">{item.display}</span>
            )}
            {item.children && (
              <ul class="dropdown-menu">
                {item.children.map((child) => (
                  <li>
                    <a
                      href={child.url}
                      target={child.url.startsWith("http") ? "_blank" : "_self"}
                      data-astro-prefetch={!child.url.startsWith("http") ? "hover" : "false"}
                      class:list={[
                        {
                          active: activeSlug === child.url,
                          external: child.url.startsWith("http"),
                        },
                      ]}
                    >
                      <span>{child.display}</span>
                      {child.url.startsWith("http") && (
                        <svg
                          xmlns="http://www.w3.org/2000/svg"
                          width="9"
                          height="9"
                          viewBox="0 0 12 13"
                          fill="none"
                        >
                          <path
                            fill-rule="evenodd"
                            clip-rule="evenodd"
                            d="M0 0.5H4V1.83333H1.33333V11.1667H10.6667V8.5H12V12.5H0V0.5ZM9.72386 1.83333H7.77778V0.5H12V4.72222H10.6667V2.77614L6.4714 6.9714L5.5286 6.0286L9.72386 1.83333Z"
                            style={{ fill: "var(--text-body-primary)" }}
                          />
                        </svg>
                      )}
                    </a>
                  </li>
                ))}
              </ul>
            )}
          </li>
        ))
      }
    </ul>
    <div class="nav-actions">
      <a
        href="https://docs.defguard.net/getting-started/one-line-install"
        target="_blank"
        class="nav-cta nav-cta-secondary"
      >
        Get Started
      </a>
      <a href="/book-a-demo" class="nav-cta nav-cta-primary">Book a Demo</a>
    </div>
  </nav>
  <section id="mobile-nav-bar">
    <a href="/" class="nav-logo" aria-label="defguard">
      <Fragment set:html={logoSVG} />
    </a>
    <button id="mobile-nav-menu-burger" aria-label="mobile-nav-menu-burger">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="32"
        height="33"
        viewBox="0 0 32 33"
        fill="none"
        id="mobile-nav-burger-closed"
      >
        <path
          d="M7 23.5H25M7 9.5H25M7 16.5H25"
          style={{ stroke: "var(--text-body-primary)" }}></path>
      </svg>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="32"
        height="33"
        viewBox="0 0 32 33"
        fill="none"
        id="mobile-nav-burger-open"
        class="hidden"
      >
        <path d="M9 9.5L23 23.5" style={{ stroke: "var(--text-body-primary)" }}></path>
        <path d="M23 9.5L9 23.5" style={{ stroke: "var(--text-body-primary)" }}></path>
      </svg>
    </button>
  </section>
  <nav id="mobile-nav">
    <ul>
      {
        navItems.map((item) => (
          <li class:list={["nav-item", { "has-dropdown": item.children }]}>
            {item.url ? (
              <a
                href={item.url}
                target={item.external ? "_blank" : "_self"}
                data-astro-prefetch={item.prefetch ? "hover" : "false"}
                class:list={[
                  {
                    active: activeSlug === item.url,
                    external: item.external,
                  },
                ]}
              >
                <span>{item.display}</span>
                {item.external && (
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="9"
                    height="9"
                    viewBox="0 0 12 13"
                    fill="none"
                  >
                    <path
                      fill-rule="evenodd"
                      clip-rule="evenodd"
                      d="M0 0.5H4V1.83333H1.33333V11.1667H10.6667V8.5H12V12.5H0V0.5ZM9.72386 1.83333H7.77778V0.5H12V4.72222H10.6667V2.77614L6.4714 6.9714L5.5286 6.0286L9.72386 1.83333Z"
                      style={{ fill: "var(--text-body-primary)" }}
                    />
                  </svg>
                )}
              </a>
            ) : (
              <button class="nav-label dropdown-toggle">
                <span>{item.display}</span>
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="16"
                  height="16"
                  viewBox="0 0 16 16"
                  fill="none"
                  class="chevron"
                >
                  <path
                    d="M4 6L8 10L12 6"
                    stroke="currentColor"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                  />
                </svg>
              </button>
            )}
            {item.children && (
              <ul class="dropdown-menu">
                {item.children.map((child) => (
                  <li>
                    <a
                      href={child.url}
                      target={child.url.startsWith("http") ? "_blank" : "_self"}
                      data-astro-prefetch={!child.url.startsWith("http") ? "hover" : "false"}
                      class:list={[
                        {
                          active: activeSlug === child.url,
                          external: child.url.startsWith("http"),
                        },
                      ]}
                    >
                      <span>{child.display}</span>
                      {child.url.startsWith("http") && (
                        <svg
                          xmlns="http://www.w3.org/2000/svg"
                          width="9"
                          height="9"
                          viewBox="0 0 12 13"
                          fill="none"
                        >
                          <path
                            fill-rule="evenodd"
                            clip-rule="evenodd"
                            d="M0 0.5H4V1.83333H1.33333V11.1667H10.6667V8.5H12V12.5H0V0.5ZM9.72386 1.83333H7.77778V0.5H12V4.72222H10.6667V2.77614L6.4714 6.9714L5.5286 6.0286L9.72386 1.83333Z"
                            style={{ fill: "var(--text-body-primary)" }}
                          />
                        </svg>
                      )}
                    </a>
                  </li>
                ))}
              </ul>
            )}
          </li>
        ))
      }
    </ul>
    <div class="mobile-nav-actions">
      <a
        href="https://docs.defguard.net/getting-started/one-line-install"
        target="_blank"
        class="nav-cta nav-cta-secondary"
      >
        Get Started
      </a>
      <a href="/book-a-demo" class="nav-cta nav-cta-primary">Book a Demo</a>
    </div>
  </nav>
</Fragment>

<script>
  const mobileNavElement = document.getElementById("mobile-nav");
  const navBurgerElement = document.getElementById("mobile-nav-menu-burger");
  const navIconOpen = document.getElementById("mobile-nav-burger-open");
  const navIconClosed = document.getElementById("mobile-nav-burger-closed");

  if (navBurgerElement && navIconOpen && navIconClosed && mobileNavElement) {
    navBurgerElement.addEventListener("click", (e) => {
      e.preventDefault();
      mobileNavElement.classList.toggle("open");
      navIconClosed.classList.toggle("hidden");
      navIconOpen.classList.toggle("hidden");
    });
  }

  // Accordion logic for mobile dropdown menus
  const mobileDropdownItems = document.querySelectorAll(
    "#mobile-nav .nav-item.has-dropdown"
  );

  mobileDropdownItems.forEach((item) => {
    const toggle = item.querySelector(".dropdown-toggle");
    const dropdownMenu = item.querySelector(".dropdown-menu");

    if (toggle && dropdownMenu) {
      toggle.addEventListener("click", (e) => {
        e.preventDefault();
        item.classList.toggle("open");
      });
    }
  });
</script>

<style lang="scss" is:global>
  .nav-logo {
    display: flex;
    padding: 12px 0;
  }

  #mobile-nav {
    display: none;
    width: 100%;
    padding-top: var(--nav-height);
    box-sizing: border-box;
    background-color: var(--surface-frame-bg);
    position: fixed;
    inset: 0;
    z-index: 3;
    overflow-y: auto;

    &.open {
      display: block;
    }

    @include break-up(lg) {
      display: none !important;
    }

    ul {
      list-style: none;
      padding: 40px 60px;
      margin: 0;
      display: flex;
      flex-flow: column;
      row-gap: 30px;
      
      li {
        margin: 0;
        padding: 0;
        
        a {
          display: flex;
          width: 100%;
          text-decoration: none;
          @include typography(menu);
          font-size: 18px;
          border-left: 1px solid transparent;
          box-sizing: border-box;
          padding: 5px 10px;

          &.active {
            border-left-color: var(--text-body-primary);
          }

          &.external {
            display: flex;
            flex-flow: row;
            align-items: center;
            justify-content: flex-start;
            column-gap: 5px;

            svg {
              user-select: none;
            }
          }
        }

        &.has-dropdown {
          > .nav-label {
            display: flex;
            width: 100%;
            @include typography(menu);
            font-size: 18px;
            border-left: 1px solid transparent;
            box-sizing: border-box;
            padding: 5px 10px;
            background: none;
            border: none;
            text-align: left;
            cursor: pointer;
            align-items: center;
            justify-content: space-between;
            color: var(--text-body-primary);

            .chevron {
              transition: transform 0.3s ease;
            }
          }

          &.open {
            > .nav-label .chevron {
              transform: rotate(180deg);
            }

            > .dropdown-menu {
              display: flex;
            }
          }

          .dropdown-menu {
            display: none;
            flex-direction: column;
            list-style: none;
            padding: 10px 0 10px 20px;
            margin: 0;
            row-gap: 15px;

            li {
              a {
                font-size: 16px;
                padding: 5px 10px;
              }
            }
          }
        }
      }
    }

    .mobile-nav-actions {
      display: flex;
      flex-direction: column;
      padding: 20px 60px 40px;
      row-gap: 15px;

      .nav-cta {
        width: 100%;
        text-align: center;
      }
    }
  }

  #mobile-nav-bar {
    box-sizing: border-box;
    width: 100%;
    height: var(--nav-height);
    display: flex;
    flex-flow: row;
    align-items: center;
    justify-content: flex-start;
    padding: 0 20px;
    position: fixed;
    z-index: 4;
    inset: 0;
    background-color: var(--surface-frame-bg);

    @include break-up(lg) {
      display: none;
    }

    button {
      user-select: none;
      cursor: pointer;
      display: flex;
      flex-flow: row;
      align-items: center;
      justify-content: center;
      height: 32px;
      width: 32px;
      padding: 0;
      border: none;
      background-color: transparent;
      margin: 0;
      margin-left: auto;

      svg {
        &.hidden {
          display: none;
        }
      }
    }
  }

  #desktop-nav {
    // vars
    --main-padding: 12px 32px;
    --items-gap: 10px;
    display: none;
    background-color: var(--surface-frame-bg);
    z-index: 4;
    top: 0;
    left: 0;
    position: fixed;
    width: 100%;
    flex-flow: row nowrap;
    height: var(--nav-height);
    overflow: visible;
    box-sizing: border-box;
    padding: var(--main-padding);
    align-items: center;
    justify-content: flex-start;
    column-gap: 10px;

    @include break-up(lg) {
      display: flex;
    }

    @include break-up(xl) {
      --main-padding: 12px 64px;
      --items-gap: 32px;
    }

    .nav-logo {
      svg {
        g {
          path {
            fill: var(--text-body-primary);
          }
        }
      }
    }

    .nav-items {
      margin: 0;
      padding: 0;
      margin-left: auto;
      display: flex;
      flex-flow: row nowrap;
      list-style: none;
      column-gap: var(--items-gap);

      li.nav-item {
        user-select: none;
        display: block;
        position: relative;

        a,
        .nav-label {
          display: flex;
          flex-flow: row nowrap;
          align-items: center;
          justify-content: center;
          text-decoration: none;
          padding: 5px 10px;
          height: 31px;
          border-top: 1px solid transparent;
          border-bottom: 1px solid transparent;
          box-sizing: border-box;
          cursor: pointer;

          span {
            display: block;
            @include typography(menu);
            text-align: center;
          }

          &:hover {
            border-bottom-color: var(--text-body-primary);
          }

          &.active {
            border-top-color: var(--text-body-primary);
          }

          &.external {
            display: flex;
            flex-flow: row;
            align-items: center;
            justify-content: center;
            column-gap: 5px;

            svg {
              user-select: none;
            }
          }
        }

        .nav-label {
          background: none;
          border: none;
          border-top: 1px solid transparent;
          border-bottom: 1px solid transparent;
          color: var(--text-body-primary);
          cursor: default;
        }

        &.has-dropdown {
          .dropdown-menu {
            display: none;
            position: absolute;
            top: 100%;
            left: 0;
            right: auto;
            z-index: 1000;
            background-color: var(--surface-frame-bg);
            border: 1px solid rgba(128, 128, 128, 0.15);
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            padding: 16px;
            margin-top: 8px;
            min-width: fit-content;
            list-style: none;
            pointer-events: auto;

            li {
              margin: 0;
              padding: 0;
              list-style: none;

              a {
                display: flex;
                align-items: center;
                justify-content: flex-start;
                gap: 6px;
                width: 100%;
                padding: 10px 12px;
                height: auto;
                border: none;
                border-radius: 4px;
                transition: background-color 0.2s ease;
                cursor: pointer;
                box-sizing: border-box;
                pointer-events: auto;
                text-decoration: none;
                color: var(--text-body-primary);
                white-space: nowrap;

                span {
                  white-space: nowrap;
                }

                &:hover {
                  background-color: rgba(128, 128, 128, 0.1);
                  border: none;
                  text-decoration: none;
                }

                &.active {
                  background-color: rgba(128, 128, 128, 0.1);
                  border: none;
                }
              }
            }
          }

          /* ==================================================
            == MOSTEK NAPRAWCZY DLA LUKI 8PX ==
            ==================================================
          */
          &::after {
            content: '';
            position: absolute;
            left: 0;
            right: 0;
            top: 100%; // Zaczyna się na dole li.nav-item
            height: 8px; // <-- Ta wysokość MUSI być taka sama jak margin-top menu!
            background: transparent; // Jest całkowicie niewidzialny
            cursor: default; 
            pointer-events: auto; // Utrzymuje hover state podczas przechodzenia myszy
          }
          /* ==================================================
            == KONIEC BLOKU MOSTKA ==
            ==================================================
          */

          // Kluczowa reguła hover - pokazuje menu
          &:hover > .dropdown-menu {
            display: block;
          }
        }
      }
    }

    .nav-actions {
      display: flex;
      margin-left: auto;
      gap: 12px;
      align-items: center;

      .nav-cta {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 8px 20px;
        text-decoration: none;
        @include typography(menu);
        border-radius: 6px;
        transition: all 0.2s ease;
        white-space: nowrap;

        &.nav-cta-primary {
          background-color: var(--text-body-primary);
          color: var(--surface-frame-bg);
          border: 2px solid var(--text-body-primary);

          &:hover {
            background-color: transparent;
            color: var(--text-body-primary);
          }
        }

        &.nav-cta-secondary {
          background-color: transparent;
          color: var(--text-body-primary);
          border: 2px solid var(--text-body-primary);

          &:hover {
            background-color: var(--text-body-primary);
            color: var(--surface-frame-bg);
          }
        }
      }
    }
  }
</style>
