---

---

<ul id="floating-links">
  <li>
    <a href="/book-a-demo/" class="highlight" data-astro-prefetch>
      <span>Book a Demo</span>
    </a>
  </li>
  <li>
    <a href="/newsletter/" data-astro-prefetch><span>Newsletter</span></a>
  </li>
  <li>
    <a href="https://github.com/DefGuard/defguard" target="_blank">
      <span>GitHub</span>
    </a>
  </li>
  <li>
    <a href="https://matrix.to/#/#defguard:teonite.com" target="_blank"
      ><span>Matrix</span></a
    >
  </li>
</ul>

<script>
  const defaultTheme = document.documentElement.dataset["theme"];
  const componentElement = document.getElementById("floating-links");
  if (componentElement) {
    componentElement.dataset.theme = defaultTheme;
    const pageLightElements = document.querySelectorAll("main [data-theme='light']");
    const pageDarkElements = document.querySelectorAll("main [data-theme='dark']");
    const elementsToObserve = [...pageDarkElements, ...pageLightElements];

    const observerCallback: IntersectionObserverCallback = (entries) => {
      entries.forEach((el) => {
        if (el.isIntersecting) {
          componentElement.dataset.theme = (el.target as HTMLElement).dataset.theme;
        }
      });
    };

    elementsToObserve.forEach((el) => {
      const observer = new IntersectionObserver(observerCallback, {
        root: null,
        threshold: 0.65,
        rootMargin: "75px",
      });
      observer.observe(el);
    });
  }
</script>

<style lang="scss">
  #floating-links {
    position: fixed;
    z-index: 2;
    top: clamp(540px, 25dvh, 500px);
    right: 0;
    list-style: none;
    margin: 0;
    padding: 0;
    flex-flow: column;
    row-gap: 15px;
    width: 175px;
    display: none;
    // background-color:var(--surface-frame-bg);

    @media (min-width: 1450px) {
      display: flex;
    }

    li {
      margin: 0;
      padding: 0;

      a {
        height: 37px;
        width: 100%;
        @include typography(menu);
        display: flex;
        flex-flow: row;
        align-items: center;
        padding-left: 10px;
        justify-content: flex-start;
        box-sizing: border-box;
        border-bottom: 1px solid var(--text-body-primary);
        text-decoration: none;
        transition-property: border-bottom-color border-bottom-width;

        @include animate();

        &:hover {
          border-bottom-color: var(--surface-main-primary);
          border-bottom-width: 4px;
        }
      }
      .highlight {
        background-color: var(--surface-main-primary);
        span {
          color: white;
        }

        &:hover {
          border-bottom-color: var(--text-body-primary);
        }
      }
    }
  }
</style>
