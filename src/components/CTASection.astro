---
import clsx from "clsx";
import ContentLimiter from "./ContentLimiter.astro";
import AstroButton from "./AstroButton.astro";

interface Props {
  title: string;
  description: string;
  buttonText: string;
  buttonLink: string;
  buttonTarget?: string;
  button2Text?: string;
  button2Link?: string;
  button2Target?: string;
  className?: string;
  id?: string;
  maxWidth?: number;
  variant?: "white" | "gray";
  theme?: "light" | "dark";
  showBorder?: boolean;
}

const {
  title,
  description,
  buttonText,
  buttonLink,
  buttonTarget = "_self",
  button2Text,
  button2Link,
  button2Target = "_self",
  className,
  id,
  maxWidth = 900,
  variant = "gray",
  theme = "light",
  showBorder = false,
} = Astro.props;
---

<section
  class={clsx("cta-section", `variant-${variant}`, `theme-${theme}`, className, { 'with-border': showBorder })}
  id={id}
  aria-labelledby={id ? `${id}-title` : undefined}
>
  <ContentLimiter maxWidth={maxWidth}>
    <div class={clsx("cta-content", { 'with-border': showBorder })}>
      <h2 class="cta-title" id={id ? `${id}-title` : undefined}>{title}</h2>
      <p class="cta-description">{description}</p>
      <div class="cta-button-container">
        <AstroButton
          text={buttonText}
          link={{
            href: buttonLink,
            target: buttonTarget,
            preload: true,
          }}
        />
        {button2Text && button2Link && (
          <AstroButton
            text={button2Text}
            link={{
              href: button2Link,
              target: button2Target,
              preload: true,
            }}
            className="secondary"
          />
        )}
      </div>
    </div>
  </ContentLimiter>
</section>

<style lang="scss">
  @use "../styles/mixins" as *;

  .cta-section {
    width: 100%;
    padding-top: 2rem;
    padding-bottom: 5rem;

    &.with-border{
      padding-top: 0rem;
    }
    
    &.variant-white {
      background-color: var(--background-primary, #f9f9f9);
    }

    &.variant-gray {
      background-color: var(--background-secondary, #f5f5f5);
    }

    &.theme-light {
      color: var(--text-body-primary, #333);

      .cta-title {
        color: var(--text-heading-primary, #111);
      }
    }

    &.theme-dark {
      color: var(--text-body-light, #f5f5f5);
      background-color: var(--background-dark, #222);

      .cta-title {
        color: var(--text-heading-light, white);
      }
    }

    .cta-content {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      text-align: center;
      width: 100%;

      .cta-title {
        @include typography(h1);
        margin-bottom: 0.5rem;
        max-width: 800px;
      }

      .cta-description {
        @include typography(paragraph);
        margin-bottom: 1.5rem;
        margin-top: 0;
        max-width: 700px;
      }

      .cta-button-container {
        margin-bottom: 0;
        display: flex;
        gap: 1rem;
        @media (max-width: 600px) {
          flex-direction: column;
          gap: 0.75rem;
          width: 100%;
          align-items: center;
        }
      }
    }
  }

  .cta-content.with-border {
    border-top: 1px solid var(--border-separator);
    padding-top: 2rem;
  }
</style>
