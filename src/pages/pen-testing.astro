---
import Navigation from "../components/base/Navigation.astro";
import ProductLayout from "../layouts/ProductLayout.astro";
import FlexibleSection from "../components/FlexibleSection.astro";
import { getCollection } from "astro:content";
import { late } from "astro:schema";

const title = "Transparency & Security Report";
const description = "Defguard is fully open – not only with our code, but also with our development process, roadmaps, and detailed penetration testing reports from periodic security audits of all Defguard components.";

const button1 = "How we approach security in Defguard"
const button2 = "Vulnerability Disclosure Process"

const description_footer = "Below you can find all previews and current reports, as well as links to Pull Requests for each finding, fixing the issue.";

const featuredImage =
  "github.com/DefGuard/defguard.github.io/raw/main/public/images/product/core/hero-image.png";
const imageWidth = "1920";
const imageHeight = "1080";
const url = "https://defguard.net/pen-testing/";
const tags = [
  "defguard",
  "faq",
  "questions",
  "answers",
  "vpn",
  "WireGuard",
  "mfa",
  "2fa",
  "security",
  "authentication",
  "zero-trust",
];

// Pobierz dzisiejszą datę
const today = new Date();
// Sformatuj: dzień, miesiąc słownie, rok
const formattedDate = today.toLocaleString("en-PL", {
  day: "2-digit",
  month: "long",
  year: "numeric"
});

// Get FAQ items from content collection
const faqItems = await getCollection("pentests");
const severityOrder = {
  Critical: 1,
  High: 2,
  Medium: 3,
  Low: 4,
};
// Get the collection and sort it based on the severity
const pentests = await getCollection("pentests");

const sortedPentests = pentests.sort((a, b) => {
  const severityA = a.data.severity as keyof typeof severityOrder;
  const severityB = b.data.severity as keyof typeof severityOrder;

  // Use the severityOrder map to get numerical values for comparison
  const orderA = severityOrder[severityA];
  const orderB = severityOrder[severityB];

  // Compare the numerical values to sort
  return orderA - orderB;
});


// Prepare FAQ schema data
const faqSchemaData = {
  "@context": "https://schema.org",
  "@type": "FAQPage",
  "mainEntity": sortedPentests.map((item) => ({
    "@type": "Vulnerability",
    "name": item.data.title,
    "acceptedAnswer": {
      "@type": "Answer",
      "text": item.body // This will contain the raw markdown content
    }
  }))
};
---

<ProductLayout
  title={title}
  description={description}
  featuredImage={featuredImage}
  imageWidth={imageWidth}
  imageHeight={imageHeight}
  url={url}
  tags={tags}
>
  
  <main>
    <FlexibleSection>
      <div class="title-section">
        {title}
      </div>
      <div class ="description-section">
        {description}
      </div>
      <div class="button-row">
        <div class="button">
          <div class="button-text">
            {button1}
            <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M15 10.5H16.5V14.62C16.5 15.65 15.66 16.5 14.62 16.5H4.88C3.85 16.5 3 15.66 3 14.62V4.88C3 3.84 3.84 3 4.88 3H9V4.5H4.88C4.67 4.5 4.5 4.67 4.5 4.88V14.63C4.5 14.84 4.67 15.01 4.88 15.01H14.63C14.84 15.01 15.01 14.84 15.01 14.63V10.51L15 10.5ZM15.75 3H11.27V4.5H13.9L9.22 9.18L10.28 10.24L15 5.52V8.23H16.5V3.75C16.5 3.34 16.16 3 15.75 3Z" fill="#3961DB"/>
            </svg>
          </div>
        </div>
        <div class="button">
          <div class="button-text">
            {button2}
            <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M15 10.5H16.5V14.62C16.5 15.65 15.66 16.5 14.62 16.5H4.88C3.85 16.5 3 15.66 3 14.62V4.88C3 3.84 3.84 3 4.88 3H9V4.5H4.88C4.67 4.5 4.5 4.67 4.5 4.88V14.63C4.5 14.84 4.67 15.01 4.88 15.01H14.63C14.84 15.01 15.01 14.84 15.01 14.63V10.51L15 10.5ZM15.75 3H11.27V4.5H13.9L9.22 9.18L10.28 10.24L15 5.52V8.23H16.5V3.75C16.5 3.34 16.16 3 15.75 3Z" fill="#3961DB"/>
            </svg>
          </div>
        </div>
    </div>
    <div class="description-footer">
      {description_footer}
    </div>
    <div class="pen-tests-container">
      <div class="sidebar">
        <div class="sidebar-title">Recent penetration test</div>
        <div class="toolbar">
          <div class="toolbar-title">
            {formattedDate}
          </div>

          <div class="divider-toolbar"></div>

          <div class="toolbar-description-first">
            <div class="toolbar-second-title">
              What was tested:
            </div>
            <div class="tested-components">
              Core 1.5.0, proxy 1.5.0, Desktop Client 1.5.0, Gateway 1.5.0, Mobile 1.0
          </div>
          </div>
          <div class="divider-toolbar"></div>

          <div class="toolbar-description-second">
            <div class="toolbar-second-title">
              Found vulnerabilities:
            </div>
          </div>

        </div>
      </div>
      <div class="main-content">
        <div class="pen-tests-title">What We’re Working On</div>
        <div class="divider"></div>
        <div class="issues-container">
          <div class="column-titles-container">
            <div class="column-title-issue-status">Issue status</div>
            <div class="column-description">
              <div class="column-title-description">Description</div>
            </div>
            <div class="column-title-severity">Severity</div>
          </div>
          {sortedPentests.map((item,idx) => {
            // Ustal status i kolor
            const status = item.data.status;
            let index = idx.toString();

            let statusBg = "#038026";
            if (status === "Completed") statusBg = "#038026";
            else if (status === "In progress") statusBg = "#B6F5C9";

            // Ustal klasę dla severity
            let severityClass = "severity-text-low";
            if (item.data.severity === "High") severityClass = "severity-text-high";
            else if (item.data.severity === "Medium") severityClass = "severity-text-medium";

            let statusIndicatorClass = "status-in-progress-indicator";
            if (status === "Completed") statusIndicatorClass = "status-completed-indicator";
            
            let statusTextClass = "status-in-progress-text";
            if (status === "Completed") statusTextClass = "status-completed-text";


            return (
              <div class="issue" id={`issue-`+index}>
                <div class="arrow-box" onclick={`window.toggleIssue(${index})`}>
                  <div class="arrow-icon">
                    <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
                      <path fill-rule="evenodd" clip-rule="evenodd" d="M8.11145 4.95046L12.4214 9.27046C12.7138 9.56345 12.7135 10.0378 12.4208 10.3305L8.11083 14.6405L7.05017 13.5798L10.8305 9.79956L7.04956 6.00989L8.11145 4.95046Z" fill="#7E8794"/>
                    </svg>
                  </div>
                </div>
                <div class="status-box">
                  <div class={statusIndicatorClass}>
                    <div class={statusTextClass}>
                      {status === "Completed"&& (
                        <div class="status-success-icon">
                          <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
                            <path d="M8 3C5.23485 3 3 5.23485 3 8C3 10.7652 5.23485 13 8 13C10.7652 13 13 10.7652 13 8C13 5.23485 10.7525 3 8 3ZM7.91162 10.0707C7.77273 10.2096 7.58333 10.298 7.38131 10.298C7.17929 10.298 6.9899 10.2222 6.85101 10.0707L5.05808 8.26515L6.13131 7.19192L7.39394 8.45455L9.94444 5.90404L11.0177 6.97727L7.92424 10.0707H7.91162Z" fill="white"/>
                          </svg>
                        </div>
                      )}
                      {status === "In Progress" && (
                        <div class="status-success-icon">
                          <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M11.7918 8.61795L6.7106 12.8554C6.32389 13.1787 5.72134 12.9253 5.72134 12.4361C5.72134 11.5536 5.72134 10.3566 5.72134 9.37808H3.59895C3.05036 9.37808 2.78956 8.73153 3.20325 8.38205L8.30239 4.14455C8.6891 3.82128 9.29165 4.07465 9.29165 4.56393C9.29165 5.44638 9.29165 6.64336 9.29165 7.62192H11.405C11.9536 7.62192 12.2054 8.26847 11.8007 8.61795H11.7918Z" fill="#038026"/>
                          </svg>
                        </div>
                      )}
                      {status}
                    </div>
                  </div>
                </div>
                <div class="description-box">
                  <div class="description-text">
                    {item.data.linked_github_issue}: {item.data.title}
                  </div>
                </div>
                <div class="severity-box">
                  <div class={severityClass}>
                    {item.data.severity}
                  </div>
                </div>
              </div>
              <div class="issue-details" id={`issue-details-`+index} style="display: none;">

                <div class="linked-github-container">
                  <div class="linked-github-title">Linked GitHub issue</div>
                  <div class="linked-github-description">
                    You can track the status of this issue via the GitHub link below. If you wish, you may also subscribe there to receive notifications about its resolution.
                  </div>
                  <div class="linked-github-button">
                    <div class="github-icon">
                      <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path fill-rule="evenodd" clip-rule="evenodd" d="M10 2C5.58214 2 2 5.67162 2 10.204C2 13.8292 4.29286 16.9008 7.47143 17.9866C7.87143 18.0616 8.01786 17.808 8.01786 17.5901C8.01786 17.3937 8.01071 16.8794 8.00714 16.1936C5.78214 16.6901 5.31071 15.0935 5.31071 15.0935C4.94643 14.1471 4.42143 13.8935 4.42143 13.8935C3.69643 13.3827 4.475 13.3935 4.475 13.3935C5.27857 13.4506 5.7 14.2399 5.7 14.2399C6.41429 15.4936 7.57143 15.1328 8.02857 14.9221C8.1 14.3935 8.30714 14.0292 8.53571 13.8256C6.76071 13.6185 4.89286 12.9149 4.89286 9.77184C4.89286 8.87536 5.20357 8.14318 5.71429 7.57172C5.63214 7.36457 5.35714 6.52881 5.79286 5.40018C5.79286 5.40018 6.46429 5.17874 7.99286 6.23951C8.63214 6.05736 9.31429 5.96807 9.99643 5.9645C10.675 5.96807 11.3607 6.05736 12 6.23951C13.5286 5.17874 14.1964 5.40018 14.1964 5.40018C14.6321 6.52881 14.3571 7.36457 14.275 7.57172C14.7857 8.14675 15.0964 8.87893 15.0964 9.77184C15.0964 12.922 13.225 13.6149 11.4429 13.8185C11.7286 14.0721 11.9857 14.5721 11.9857 15.3364C11.9857 16.4329 11.975 17.3187 11.975 17.5865C11.975 17.8044 12.1179 18.0616 12.525 17.9794C15.7107 16.8972 18 13.8256 18 10.204C18 5.67162 14.4179 2 10 2Z" fill="white"/>
                      </svg>
                    </div>
                    <div class="linked-github-button-text">
                      {item.data.issue_link}
                    </div>
                  </div>

                </div>


              </div>
            );
          })}
        </div>

        
      </div>

    </div>

    </FlexibleSection>
  </main>


  <Navigation activeSlug="/pen-testing" />
</ProductLayout>

<style lang="scss" is:global>

.title-section {
color: var(--fgColor-default, #1D1F 22);
font-family: "Geist", sans-serif;
font-size: 52px;
font-style: normal;
font-weight: 500;
line-height: 44px;
margin-bottom: 32px;
}
.description-section {
color: #1D1F22;
font-family: "Geist", sans-serif;
font-size: 18px;
font-style: normal;
font-weight:500;
line-height: 28px;
width: 1002px;
margin-bottom: 24px;
// text-decoration-line: underline;
// text-decoration-style: solid;
// text-decoration-skip-ink: none;
// text-decoration-thickness: auto;
// text-underline-offset: auto;
// text-underline-position: from-font;
}
.button-row {
  display: flex;
  gap: 16px; // odstęp między guzikami
  margin-bottom: 24px;
}
.button {
  display: flex;
  width: fit-content;
  height: 36px;
  padding: 8px 16px;
  justify-content: center;
  align-items: center;
  gap: 8px;
  border-radius: var(--border-radius-button-border-radius-primary, 8px);
  border: 1px solid var(--borderColor-action, #3961DB);
}

.button-text {
  display: flex;
  align-items: center;
  color: var(--fgColor-action, #3961DB);
  font-family: "Geist", sans-serif;
  font-size: var(--font-sizes-button-typography-primary, 14px);
  font-style: normal;
  font-weight: var(--font-weight-regular-400, 400);
  line-height: normal;
  gap: 8px;
}
.description-footer{
align-self: stretch;
color: var(--fgColor-muted, #7E8794);
font-family: "Geist", sans-serif;
font-size: var(--body-lg-16, 16px);
font-style: normal;
font-weight: var(--font-weight-regular-400, 400);
line-height: var(--line-height-xl-24, 24px); /* 150% */
margin-bottom: 80px;
}
.pen-tests-container {
  display: flex;
  flex-direction: row;
  gap: 40px;
  width: 100%;
  align-items: flex-start;
}
.sidebar{
display: flex;
width: 250px;
flex-direction: column;
align-items: flex-start;
gap: var(--spacing-md-12, 12px);
}
.main-content{
display: flex;
width: 819px;
flex-direction: column;
align-items: flex-start;
gap: var(--spacing-xl-20, 20px);
}
.pen-tests-title{
color: var(--fgColor-default, #1D1F22);
font-family: "Geist", sans-serif;
font-size: var(--heading-h4-20, 20px);
font-style: normal;
font-weight: var(--font-weight-semibold-600, 600);
line-height: var(--line-height-2xl-28, 28px); /* 140% */
margin-bottom: 20px;

}
.divider{
height: var(--divider-height, 1px);
align-self: stretch;
background: var(--bgColor-active, #DFE3E9);
}
.divider-toolbar{
height: var(--divider-height, 1px);
align-self: stretch;
background: var(--bgColor-active, #DFE3E9);
}
.sidebar-title{
align-self: stretch;
color: var(--fgColor-faded, #3D434B);
font-family: "Geist", sans-serif;
font-size: var(--body-sm-12, 12px);
font-style: normal;
font-weight: var(--font-weight-medium-500, 500);
line-height: var(--line-height-md-16, 16px); /* 133.333% */
margin-bottom: 12px;
}
.toolbar{
display: flex;
padding: var(--spacing-md-12, 12px);
flex-direction: column;
align-items: flex-start;
gap: var(--spacing-xl-20, 12px);
align-self: stretch;
border-radius: var(--radius-lg-12, 12px);
background: var(--bgColor-action-muted, #EDF1FC);
}
.toolbar-title{
color: var(--fgColor-default, #1D1F22);
font-family: "Geist", sans-serif;
font-size: var(--body-md-14, 14px);
font-style: normal;
font-weight: var(--font-weight-semibold-600, 600);
line-height: var(--line-height-lg-20, 20px); /* 142.857% */
}
.toolbar-second-title{
color: var(--fgColor-muted, #7E8794);
font-family: "Geist", sans-serif;
font-size: var(--body-sm-12, 12px);
font-style: normal;
font-weight: var(--font-weight-medium-500, 500);
line-height: var(--line-height-md-16, 16px); /* 133.333% */
margin-bottom: 8px;

}

.tested-components{
color: var(--fgColor-default, #1D1F22);
font-family: "Geist", sans-serif;
font-size: var(--body-sm-12, 12px);
font-style: normal;
font-weight: var(--font-weight-medium-500, 500);
line-height: var(--line-height-md-16, 16px); /* 133.333% */
margin-top: 12px;
}
.issues-container{
display: flex;
flex-direction: column;
align-items: flex-start;
align-self: stretch;
}
.column-titles-container{
display: flex;
align-items: center;
gap: 12px;
align-self: stretch;

}
.column-title-issue-status{
color: var(--fgColor-muted, #7E8794);
font-family: "Geist", sans-serif;
font-size: var(--body-sm-12, 12px);
font-style: normal;
font-weight: var(--font-weight-regular-400, 400);
line-height: var(--line-height-md-16, 16px); /* 133.333% */
margin-left: 53px;
width: 67px;
}
.column-description{
display: flex;
width: 609px;
padding-left: 40px;
align-items: center;
gap: 10px;
}
.column-title-description{
width: 73.177px;
flex-shrink: 0;
color: var(--fgColor-muted, #7E8794);
font-family: "Geist", sans-serif;
font-size: var(--body-sm-12, 12px);
font-style: normal;
font-weight: var(--font-weight-regular-400, 400);
line-height: var(--line-height-md-16, 16px); /* 133.333% */
}
.column-title-severity{
width: 52.269px;
color: var(--fgColor-muted, #7E8794);
font-family: "Geist", sans-serif;
font-size: var(--body-sm-12, 12px);
font-style: normal;
font-weight: var(--font-weight-regular-400, 400);
line-height: var(--line-height-md-16, 16px); /* 133.333% */
margin-left: 12px;
margin-right: 12px;
}
.issue{
display: flex;
flex-direction: row;
justify-content: center;
align-items: flex-start;
align-self: stretch;
}
.arrow-box{
display: flex;
width: 40px;
height: 52px;
padding: 10px;
justify-content: center;
align-items: center;
gap: 10px;
border-bottom: 1px solid var(--borderColor-default, #DFE3E9);
}
.status-box{
display: flex;
width: 130px;
height: 52px;
padding: 10px;
flex-direction: column;
justify-content: center;
align-items: flex-start;
gap: 10px;
border-bottom: 1px solid var(--borderColor-default, #DFE3E9);
}
.description-box{
display: flex;
height: 52px;
padding: 2px;
align-items: center;
gap: 10px;
flex: 1 0 0;
border-bottom: 1px solid var(--borderColor-default, #DFE3E9);
}
.severity-box{
display: flex;
width: 75px;
height: 52px;
padding: 10px;
justify-content: center;
align-items: center;
gap: 10px;
border-bottom: 1px solid var(--borderColor-default, #DFE3E9);
}
.arrow-icon{
width: var(--icons-size-default, 20px);
height: var(--icons-size-default, 20px);
flex-shrink: 0;
}
.status-completed-indicator{
display: flex;
height: var(--General-badge-height, 24px);
padding: var(--General-badge-spacing, 8px);
justify-content: center;
align-items: center;
gap: var(--spacing-icons-badge, 4px);
flex-shrink: 0;
border-radius: var(--General-badge-border-radius, 8px);
background: var(--bgColor-success, #038026);
}
.status-in-progress-indicator{
display: flex;
height: var(--General-badge-height, 24px);
padding: var(--General-badge-spacing, 8px);
justify-content: center;
align-items: center;
gap: var(--spacing-icons-badge, 4px);
flex-shrink: 0;
border-radius: var(--General-badge-border-radius, 8px);
background: var(--saturated-green-color-green-500-transparent, rgba(3, 128, 38, 0.08));
}
.status-completed-text {
  display: flex;
  align-items: center;
  gap: 4px; // odstęp między ikoną a tekstem
  color: var(--fgColor-white, #FFF);
  font-family: "Geist", sans-serif;
  font-size: var(--Typography-badge-font-size, 12px);
  font-style: normal;
  font-weight: var(--Typography-badge-font-weight, 500);
  line-height: var(--Typography-badge-line-height, 16px);
  letter-spacing: var(--Typography-badge-letter-spacing, 0.3px);
}
.status-in-progress-text {
  display: flex;
  align-items: center;
  gap: 4px;
  color: var(--fgColor-success, #038026);
  font-family: "Geist", sans-serif;
  font-size: var(--Typography-badge-font-size, 12px);
  font-style: normal;
  font-weight: var(--Typography-badge-font-weight, 500);
  line-height: var(--Typography-badge-line-height, 16px);
  letter-spacing: var(--Typography-badge-letter-spacing, 0.3px);
}
.status-success-icon{
width: var(--size-xs-16, 16px);
height: var(--size-icons-small, 16px);
aspect-ratio: 1/1;
margin-right: 4px;
}
.status-in-progress-icon{
width: var(--size-xs-16, 16px);
height: var(--size-icons-small, 16px);
aspect-ratio: 1/1;
margin-right: 4px;
}

.description-text{
color: var(--fgColor-action, #3961DB);
font-family: "Geist", sans-serif;
font-size: var(--body-md-14, 14px);
font-style: normal;
font-weight: var(--font-weight-medium-500, 500);
line-height: var(--line-height-lg-20, 20px); /* 142.857% */
}
.severity-text-high{
color: var(--fgColor-critical, #CC3C3C);
font-family: "Geist", sans-serif;
font-size: var(--body-sm-12, 12px);
font-style: normal;
font-weight: var(--font-weight-medium-500, 500);
line-height: var(--line-height-md-16, 16px); /* 133.333% */
flex: 1 0 0;
}
.severity-text-medium{
color: var(--fgColor-attention, #FF9500);
font-family: "Geist", sans-serif;
font-size: var(--body-sm-12, 12px);
font-style: normal;
font-weight: var(--font-weight-medium-500, 500);
line-height: var(--line-height-md-16, 16px); /* 133.333% */
flex: 1 0 0;
}
.severity-text-low{
color: var(--fgColor-muted, #7E8794);
font-family: "Geist", sans-serif;
font-size: var(--body-sm-12, 12px);
font-style: normal;
font-weight: var(--font-weight-medium-500, 500);
line-height: var(--line-height-md-16, 16px); /* 133.333% */
flex: 1 0 0;
}
.issue-details {
display: flex;
flex-direction: column;
justify-content: center;
align-items: flex-end;
align-self: stretch;
}

.linked-github-container {
display: flex;
padding: 20px 0;
align-items: flex-start;
gap: var(--spacing-3xl-40, 40px);
align-self: stretch;
}

.linked-github-title{
color: var(--fgColor-faded, #3D434B);
font-family: "Geist", sans-serif;
font-size: var(--body-sm-12, 12px);
font-style: normal;
font-weight: var(--font-weight-semibold-600, 600);
line-height: var(--line-height-lg-20, 20px); /* 166.667% */
}
.linked-github-description{
color: var(--fgColor-default, #1D1F22);
font-family: "Geist", sans-serif;
font-size: var(--body-md-14, 14px);
font-style: normal;
font-weight: var(--font-weight-regular-400, 400);
line-height: var(--line-height-lg-20, 20px); /* 142.857% */
}
.linked-github-button{
display: flex;
padding: var(--spacing-sm-8, 8px) var(--spacing-md-12, 12px);
align-items: center;
gap: var(--spacing-sm-8, 8px);
align-self: stretch;
border-radius: var(--radius-md-8, 8px);
background: var(--bgColor-action, #3961DB);
}
.linked-github-button-text{
 color: var(--fgColor-white, #FFF);
font-family: "Geist", sans-serif;
font-size: var(--body-md-14, 14px);
font-style: normal;
font-weight: var(--font-weight-semibold-600, 600);
line-height: var(--line-height-lg-20, 20px); /* 142.857% */
}
.github-icon{
width: var(--icons-size-default, 20px);
height: var(--icons-size-default, 20px);
}

</style>


<script>
  (window as any).toggleIssue = function(idx: number) {
    let number = idx.toString();
    const details = document.getElementById(`issue-details-${number}`);
    if (details) {
      details.style.display = details.style.display === "none" ? "block" : "none";
    }
  }
</script>