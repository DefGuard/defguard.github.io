---
import Navigation from "../components/base/Navigation.astro";
import BuiltBy from "../components/BuiltBy.astro";
import HomeSection from "../components/home/HomeSection.astro";
import ProductLayout from "../layouts/ProductLayout.astro";
import Testimonials from "./_home/components/client-side/Testimonials/Testimonials";
import type { TestimonialData } from "./_home/components/client-side/Testimonials/type";
import { testimonialSchema } from "./_home/components/client-side/Testimonials/type";
import FlexibleIdentitySection from "./_home/components/FlexibleIdentity/FlexibleIdentitySection.astro";
import HomeHeader from "./_home/components/HomeHeader.astro";
import Roadmap from "./_home/components/Roadmap/Roadmap.astro";
import HomeScrollSection1 from "./_home/scroll-sections/section-1/HomeScrollSection1";
import HomeScrollSection2 from "./_home/scroll-sections/section-2/HomeScrollSection2";
import HomeScrollSection3 from "./_home/scroll-sections/section-3/HomeScrollSection3";

const testimonialsImportData = await Astro.glob("../data/home/testimonials/**/*.md");

const testimonialsData: Array<TestimonialData> = testimonialsImportData.map((val) => {
  const toValidate = { ...val.frontmatter, markdownRaw: val.rawContent() };
  const res = testimonialSchema.parse(toValidate);
  return res;
});

const title = "defguard - Zero-Trust WireGuardÂ® 2FA/MFA VPN";
const featuredImage =
  "github.com/DefGuard/defguard.github.io/raw/main/public/images/product/core/hero-image.png";
const imageWidth = "1920";
const imageHeight = "1080";
const url = "https://defguard.net/";
const tags = [
  "defguard",
  "open source",
  "sso & vpn",
  "vpn",
  "mfa",
  "2fa",
  "mfa/2fa",
  "wireguard",
  "ldap",
  "openldap",
  "postgresql",
  "postgres",
  "openid",
  "totp",
  "webauthn",
  "opensense",
  "freebsd",
  "rust",
  "secure",
  "desktop client",
  "desktop",
  "yubikey",
  "teonite",
  "docker",
  "kubernetes",
  "k8s",
];
---

<ProductLayout
  title={title}
  featuredImage={featuredImage}
  imageWidth={imageWidth}
  imageHeight={imageHeight}
  url={url}
  tags={tags}
>
  <Navigation activeSlug="/" />
  <main id="home-page">
    <HomeHeader />
    <HomeSection className="scroll-section" variant="white">
      <Fragment>
        <HomeScrollSection1 client:load />
      </Fragment>
    </HomeSection>
    <FlexibleIdentitySection />
    <HomeSection className="scroll-section" variant="white">
      <Fragment>
        <HomeScrollSection2 client:idle />
      </Fragment>
    </HomeSection>
    <HomeSection className="scroll-section" variant="gray">
      <Fragment>
        <HomeScrollSection3 client:idle />
      </Fragment>
    </HomeSection>
    <HomeSection id="testimonials">
      <Testimonials data={testimonialsData} client:only="react" />
    </HomeSection>
    <Roadmap />
    <BuiltBy variant="white" />
  </main>
</ProductLayout>

<style lang="scss" is:global>
  #home-page {
    --page-spacing-factor: 0.5;
    @include break-up(lg) {
      --page-spacing-factor: 1;
    }

    #testimonials {
      padding-top: page-spacing(100px);
      padding-bottom: page-spacing(100px);
    }

    .scroll-section {
      padding-top: page-spacing(200px);
      padding-bottom: page-spacing(200px);
    }

    .scroll-sections {
      & > .static-slides {
        display: flex;
        flex-flow: column;
        row-gap: 64px;

        @media screen and (min-width: 1200px) {
          display: none;
        }
      }
    }

    .content {
      &.pre-styled {
        ul {
          margin: 0;
          padding-left: 20px;
        }

        a {
          white-space: normal;
          word-wrap: break-word;
        }
      }
    }
  }
</style>
