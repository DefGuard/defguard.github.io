---
import { getCollection } from "astro:content";
import GithubStars from "../components/GithubStars/GithubStars";
import Navigation from "../components/base/Navigation.astro";
import { Button } from "../components/buttons/Button/Button";
import ProductBuiltBy from "../components/product/ProductBuiltBy.astro";
import { ProductFeature } from "../components/product/ProductFeature/ProductFeature";
import ProductImage from "../components/product/ProductImage.astro";
import ProductLayout from "../layouts/ProductLayout.astro";
import ProductSection from "../layouts/ProductSection.astro";
import MatrixSection from "../components/MatrixSection.astro";

const coreFeatures = (await getCollection("core-features")).sort(
  (f1, f2) => f1.data.order - f2.data.order,
);

const title = "";
const description = "defguard - enterprise open-source SSO&VPN";
const featuredImage = "https://github.com/DefGuard/defguard.github.io/blob/main/public/images/product/core/hero-image.png";
---

<ProductLayout title={title} description={description} featuredImage={featuredImage}>
  <Navigation activeSlug="/" />
  <main class="product-main" id="core-page">
    <ProductSection padding="small">
      <header id="main-header">
        <h1>Open Source Enterprise SSO & VPN</h1>
        <p>
          The only open-source solution with <strong
            >real WireGuardÂ® MFA/2FA & integrated OpenID Connect SSO</strong
          >.
        </p>
        <GithubStars owner="defguard" repo="defguard" client:only="preact" />
        <div class="product-download">
          <a
            href="https://github.com/DefGuard/defguard/releases"
            rel="nofollow noopener noreferrer"
            data-astro-prefetch
          >
            <Button text="Download" size="large" />
          </a>
        </div>
      </header>
    </ProductSection>
    <ProductImage>
      <!-- <Image src={coreImage} alt="defguard vpn overview image" /> -->
      <img src="/images/product/core/hero-image.png" alt="main image" />
    </ProductImage>
    <ProductSection padding="large">
      <div class="product-features">
        {
          coreFeatures.map(async (f, index) => {
            const { Content } = await f.render();
            return (
              <ProductFeature
                title={f.data.title}
                id={index}
                context="core"
                client:only="preact"
              >
                <Content />
              </ProductFeature>
            );
          })
        }
      </div>
    </ProductSection>
    <ProductBuiltBy />
    <MatrixSection />
  </main>
</ProductLayout>

<style lang="scss" is:global>
  .button-link {
    display: block;
    padding-top: 20px;
  }
</style>
