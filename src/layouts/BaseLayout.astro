---
import FloatingLinks from "../components/FloatingLinks.astro";
import Footer from "../components/base/Footer.astro";
import "../styles/global.scss";
import { CookieBar } from "../components/base/CookieBar/CookieBar";
import Google from "../components/analytics/Google.astro";

const favSizes = [
  16, 32, 57, 60, 70, 72, 76, 96, 114, 120, 128, 144, 150, 152, 180, 192, 310, 384, 512,
];

interface Props {
  title: string;
  description: string;
  featuredImage: string;
  imageWidth: string;
  imageHeight: string;
  url: string;
}

const { url, title, description, featuredImage, imageWidth, imageHeight } = Astro.props;
---

<!doctype html>
<html lang="en" data-theme="light">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover" />
    <meta name="generator" content={Astro.generator} />
    <title>defguard - Zero-Trust WireGuardÂ® 2FA/MFA VPN</title>
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta name="description" content={description} />
    <meta property="og:image" content={"http://" + featuredImage} />
    <meta property="og:image:secure_url" content={"https://" + featuredImage} />
    <meta property="og:image:type" content="image/png" />
    <meta property="og:image:width" content={imageWidth} />
    <meta property="og:image:height" content={imageHeight} />
    <meta property="og:url" content={url} />
    <!-- schema.org -->
    <slot name="schema" />
    <!-- Favicons -->
    {
      favSizes.map((size) => (
        <link
          rel="icon"
          type="image/png"
          sizes={`${size}x${size}`}
          href={`/favicon/favicon-${size}x${size}.png`}
        />
      ))
    }
    <link rel="icon" type="image/ico" href="/favicon/favicon.ico" />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <Google />
  </head>
  <body>
    <slot />
    <Footer />
    <FloatingLinks />
    <CookieBar client:only="react" />
    <!-- <Clarity /> -->
  </body>
</html>

<style lang="scss" is:global>
  html {
    width: 100%;
    max-width: 100%;
    overflow-x: hidden;
    box-sizing: border-box;
    /* Force proper width calculation */
    position: relative;
    /* Critical fix for the problematic range */
    @media (min-width: 768px) and (max-width: 991px) {
      overflow-x: clip;
      width: 100vw;
    }
  }

  body {
    width: 100%;
    max-width: 100%;
    overflow-x: hidden;
    position: relative;
    margin: 0;
    padding: 0;
    /* Fix for mobile width issues */
    @media screen and (max-width: 991px) {
      width: 100vw;
      min-width: 100%; 
      max-width: 100vw;
    }
  }

  *, *::before, *::after {
    box-sizing: border-box;
    max-width: 100%;
  }

  /* Set defaults for all containers */
  div, section, article, aside, nav, header, footer {
    max-width: 100%;
    box-sizing: border-box;
  }

  main {
    --page-spacing-factor: 0.5;
    width: 100%;
    max-width: 100%;
    overflow-x: hidden;
    position: relative;
    
    /* Ensure proper mobile rendering */
    @media screen and (max-width: 991px) {
      width: 100vw;
      max-width: 100vw;
    }
    
    @include break-up(lg) {
      --page-spacing-factor: 1;
    }
  }
</style>
