---
interface Props {
  id?: string;
  className?: string;
  dark?: boolean;
  padding?: "large" | "small" | "mid" | "none" | "newsletter";
  bordered?: boolean;
}

const { dark = false, padding = "large", className, id, bordered = false } = Astro.props;

const theme = dark ? "dark" : "light";
---

<div
  id={id}
  class:list={[
    "product-section",
    `padding-${padding}`,
    className,
    {
      bordered,
    },
  ]}
  data-theme={theme}
>
  <slot />
</div>

<style lang="scss" is:global>
  .product-section {
    --product-section-edge-padding: 20px;
    --product-section-items-gap: 20px;

    --product-section-padding-large: 200px;
    --product-section-padding-mid: 150px;
    --product-section-padding-small: 20px;
    --product-section-padding-newsletter: 50px;

    box-sizing: border-box;
    width: 100%;
    display: flex;
    flex-flow: column;
    align-items: center;
    justify-content: flex-start;
    background-color: var(--surface-frame-bg);

    & > * {
      max-width: 1100px;
    }

    &.padding-large {
      padding: var(--product-section-padding-large) var(--product-section-edge-padding);
    }

    &.padding-mid {
      padding: var(--product-section-padding-mid) var(--product-section-edge-padding);
    }

    &.padding-small {
      padding: var(--product-section-padding-small) var(--product-section-edge-padding);
    }

    &.padding-none {
      padding: 0 var(--product-section-edge-padding);
    }

    &.padding-newsletter {
      padding: var(--product-section-padding-newsletter)
        var(--product-section-edge-padding);
    }

    &.bordered {
      border-top: 1px solid var(--text-body-primary);
      border-bottom: 1px solid var(--text-body-primary);
    }
  }
</style>
